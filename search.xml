<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Angular Live Reload在Ubuntu沒反應</title>
    <url>/2020/08/31/AngularLiveReload/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>在Linux上，默認情況下，Listen使用inotify監視目錄中的更改</p>
<p>Ubuntu 的inotify預設限制為8192</p>
<p>您可以通過執行以下操作獲取目前的inotify文件監視限制：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/sys/fs/inotify/max_user_watches</span><br></pre></td></tr></table></figure>

<span id="more"></span>


<p>如果此限制不足以監視目錄中的所有文件，則必須增加該限制以使其正常工作</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sysctl fs.inotify.max_user_watches=524288 </span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure>
<p>如果想讓自己的限制永久化，請輸入以下命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> fs.inotify.max_user_watches=524288 | sudo <span class="built_in">tee</span> -a /etc/sysctl.conf</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://askubuntu.com/questions/770374/user-limit-of-inotify-watches-reached-on-ubuntu-16-04">User limit of inotify watches reached on Ubuntu 16.04</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在pi 3b+上執行Angular Protractor</title>
    <url>/2019/12/25/AngularProtractorOnPi/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>首先依照硬體架構從<a href="https://launchpad.net/ubuntu/trusty/+package/chromium-chromedriver">launchpad.net</a></p>
<p>下載 Chromium 瀏覽器專用的 WebDriver</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://launchpadlibrarian.net/361669488/chromium-chromedriver_65.0.3325.181-0ubuntu0.14.04.1_armhf.deb</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>接下來進行安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i chromium-chromedriver_65.0.3325.181-0ubuntu0.14.04.1_armhf.deb</span><br></pre></td></tr></table></figure>

<p>預設會放置在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/lib/chromium-browser/chromedriver</span><br></pre></td></tr></table></figure>

<p>接下來更改protractor.conf.js的設定，加入下方設定</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chromeDriver: &#x27;/usr/lib/chromium-browser/chromedriver&#x27;</span><br></pre></td></tr></table></figure>

<p>運行Protractor時使用–no-webdriver-update選項</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ng e2e --no-webdriver-update</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://blog.gtwang.org/iot/raspberry-pi/raspberry-pi-install-chromium-chrome-driver/">樹莓派 Raspberry Pi 使用 Python + Selenium 控制 Chromium 瀏覽器</a></p>
<p><a href="https://github.com/angular/protractor/blob/master/lib/config.ts">Protractor config設定參考</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Protractor</tag>
        <tag>Pi</tag>
      </tags>
  </entry>
  <entry>
    <title>如何設定Protractor WebDriver Version</title>
    <url>/2020/08/31/AngularProtractorWebDriver/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>先清除目前下載的WebDriver</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx  webdriver-manager clean</span><br></pre></td></tr></table></figure>
<p>以chrome為例從<a href="http://chromedriver.chromium.org/">chromedriver網頁</a></p>
<p>查詢所需的版本號</p>
<p>接下來依版本下載WebDriver</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx webdriver-manager update  --versions.chrome  [chrome版本號]</span><br></pre></td></tr></table></figure>
<p>運行Protractor時使用–no-webdriver-update選項</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ng e2e --no-webdriver-update</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.npmjs.com/package/webdriver-manager">webdriver-manager NPM</a></p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Protractor</tag>
      </tags>
  </entry>
  <entry>
    <title>FontForge使用Python Script進行字型檔轉換</title>
    <url>/2021/10/23/FontForgePythonTransfer/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>建立font.py檔案</p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment">#載入FontForge模組</span></span><br><span class="line"><span class="keyword">import</span> fontforge</span><br><span class="line"></span><br><span class="line"><span class="comment">#定義main函數</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():	</span><br><span class="line">	<span class="comment">#載入參數</span></span><br><span class="line">	fontFilePath = sys.argv[<span class="number">1</span>]	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#開啟字型檔</span></span><br><span class="line">	originFile=fontforge.<span class="built_in">open</span>(fontFilePath)	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#選取unicode特定範圍的字型</span></span><br><span class="line">	originFile.selection.select((<span class="string">&quot;ranges&quot;</span>, <span class="string">&quot;unicode&quot;</span>), <span class="number">0xe000</span>, <span class="number">0xf8ff</span>)	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#複製字型至剪貼簿</span></span><br><span class="line">	originFile.copy()	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#建立新的字型檔</span></span><br><span class="line">	newFile=fontforge.font()</span><br><span class="line"></span><br><span class="line">	<span class="comment">#設定sfnt_names參數與原檔一致</span></span><br><span class="line">	newFile.sfnt_names = originFile.sfnt_names	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#設定encoding參數與原檔一致</span></span><br><span class="line">	newFile.encoding = originFile.encoding	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#設定size參數與原檔一致</span></span><br><span class="line">	newFile.em = originFile.em	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#設定layers參數與原檔一致</span></span><br><span class="line">	newFile.layers[<span class="string">&#x27;Fore&#x27;</span>].is_quadratic = originFile.layers[<span class="string">&#x27;Fore&#x27;</span>].is_quadratic	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#選取unicode特定範圍的字型</span></span><br><span class="line">	newFile.selection.select((<span class="string">&quot;ranges&quot;</span>, <span class="string">&quot;unicode&quot;</span>), <span class="number">0xe000</span>, <span class="number">0xf8ff</span>)	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#貼上剪貼簿內容</span></span><br><span class="line">	newFile.paste()	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#設定字型名稱</span></span><br><span class="line">	newFile.fontname=<span class="string">&quot;EUDC&quot;</span>	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#保存為woff字型</span></span><br><span class="line">	newFile.generate(<span class="string">&quot;EUDC.woff&quot;</span>)	</span><br><span class="line"></span><br><span class="line">	<span class="comment">#關閉字型檔</span></span><br><span class="line">	originFile.close()	</span><br><span class="line"></span><br><span class="line"><span class="comment">#執行main函數</span></span><br><span class="line">main()	</span><br></pre></td></tr></table></figure>

<p>使用FontForge執行Python Script</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fontforge -script font.py [FontFilePath]</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://fontforge.org/docs/scripting/python.html">Python Scripting</a></p>
]]></content>
      <categories>
        <category>FontForge</category>
      </categories>
      <tags>
        <tag>Font</tag>
        <tag>WOFF</tag>
      </tags>
  </entry>
  <entry>
    <title>Json格式資料如何拆解成form的輸入項</title>
    <url>/2020/03/27/HtmlFormPost/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>下方是json格式資料</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;items&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;1&quot;</span><span class="punctuation">,</span><span class="string">&quot;2&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>基本物件型別的拆解如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&quot;item&quot;: &quot;1&quot;</span><br><span class="line">可拆解成:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;item&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>陣列部分需依造陣列結構做拆解</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&quot;items&quot;: [&quot;1&quot;,&quot;2&quot;]</span><br><span class="line">可拆解成:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;items[0]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;items[1]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>最後是完整的 HTML form 設定</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/api/Test/Post&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;item&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;items[0]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;items[1]&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">　<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;送出表單&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://stackoverflow.com/questions/9073690/post-an-array-from-an-html-form-without-javascript">POST an array from an HTML form without javascript</a></p>
]]></content>
      <categories>
        <category>Html</category>
      </categories>
  </entry>
  <entry>
    <title>使用Linux檔案列表建立Jenkins下拉選單</title>
    <url>/2021/10/23/JenkinsFileDropdown/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="取得檔案列表方法"><a href="#取得檔案列表方法" class="headerlink" title="取得檔案列表方法"></a>取得檔案列表方法</h2><p>使用以下Linxu指令，將預設目錄每個檔案使用一列的方式逐一列出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -1 /home/ubuntu</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="建立Jenkins-Pipeline"><a href="#建立Jenkins-Pipeline" class="headerlink" title="建立Jenkins Pipeline"></a>建立Jenkins Pipeline</h2><p>在Pipeline執行Linxu指令，把結果存入變數</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> fileInFolder = sh(<span class="attr">script:</span> <span class="string">&quot;ls -1 /home/ubuntu&quot;</span>, <span class="attr">returnStdout:</span> <span class="literal">true</span>).trim();</span><br></pre></td></tr></table></figure>
<p>在Pipeline定義Dialog，把 parameters -&gt; choice -&gt; choices定義替換為上方變數 fileInFolder</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> dialogMessage = <span class="string">&quot;Release $&#123;JOB_NAME&#125; now?&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> confirmDialog =</span><br><span class="line">    input <span class="attr">message:</span> dialogMessage,</span><br><span class="line">    <span class="symbol">parameters:</span> [choice(<span class="attr">name:</span> <span class="string">&#x27;action&#x27;</span>, <span class="attr">choices:</span> fileInFolder, <span class="attr">description:</span> <span class="string">&#x27;&#x27;</span>)],</span><br><span class="line">    <span class="symbol">submitterParameter:</span> <span class="string">&#x27;releaseApprover&#x27;</span></span><br></pre></td></tr></table></figure>
<p>取得用戶選取參數，使用變數 confirmDialog -&gt; parameters -&gt; choice -&gt; name的定義</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">confirmDialog.action</span><br></pre></td></tr></table></figure>
<p>取得點擊確認的用戶，使用變數 confirmDialog -&gt; submitterParameter的定義</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">confirmDialog.releaseApprover</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Jenkins</category>
      </categories>
  </entry>
  <entry>
    <title>如何將base64編碼轉成檔案</title>
    <url>/2019/12/09/JsBase64ToFile/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>下方是使用JavaScript把base64轉換成檔案的方法</p>
<span id="more"></span>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">function</span> <span class="title function_">downloadFile</span>(<span class="params">base64Str</span>) &#123;</span><br><span class="line">    <span class="comment">//解碼base64</span></span><br><span class="line">    <span class="keyword">const</span> byteCharacters = <span class="title function_">atob</span>(base64Str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//建立Byte Array</span></span><br><span class="line">    <span class="keyword">const</span> byteNumbers = <span class="keyword">new</span> <span class="title class_">Array</span>(byteCharacters.<span class="property">length</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; byteCharacters.<span class="property">length</span>; i++) &#123;</span><br><span class="line"> </span><br><span class="line">       byteNumbers[i] = byteCharacters.<span class="title function_">charCodeAt</span>(i);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> byteArray = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(byteNumbers);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//建立二進制檔和聲明MIME Type</span></span><br><span class="line">    <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([byteArray], &#123;<span class="attr">type</span>: <span class="string">&#x27;image/jpg&#x27;</span>&#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//下載檔案</span></span><br><span class="line">    <span class="keyword">let</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//建立檔案物件連結</span></span><br><span class="line">    <span class="keyword">const</span> blobUrl = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line"> </span><br><span class="line">    link.<span class="property">href</span> = blobUrl;</span><br><span class="line"> </span><br><span class="line">    link.<span class="property">download</span> = <span class="string">&#x27;file.jpg&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    link.<span class="title function_">click</span>();</span><br><span class="line"> </span><br><span class="line">    <span class="variable constant_">URL</span>.<span class="title function_">revokeObjectURL</span>(blobUrl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果瀏覽器使用IE 10以上版本，可使用 window.navigator.msSaveBlob 作為替代方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">downloadFile</span>(<span class="params">base64Str</span>) &#123;</span><br><span class="line">   <span class="comment">//解碼base64</span></span><br><span class="line">   <span class="keyword">const</span> byteCharacters = <span class="title function_">atob</span>(base64Str);</span><br><span class="line">	</span><br><span class="line">   <span class="comment">//建立Byte Array</span></span><br><span class="line">   <span class="keyword">const</span> byteNumbers = <span class="keyword">new</span> <span class="title class_">Array</span>(byteCharacters.<span class="property">length</span>);</span><br><span class="line">	</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; byteCharacters.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      byteNumbers[i] = byteCharacters.<span class="title function_">charCodeAt</span>(i);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">const</span> byteArray = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(byteNumbers);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//建立二進制檔和聲明MIME Type</span></span><br><span class="line">   <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([byteArray], &#123;<span class="attr">type</span>: <span class="string">&#x27;image/jpg&#x27;</span>&#125;);</span><br><span class="line"> </span><br><span class="line">   <span class="comment">//下載檔案</span></span><br><span class="line">   <span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="title function_">msSaveBlob</span>(blob, <span class="string">&#x27;file.jpg&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/atob">MDN atob</a></p>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>base64</tag>
      </tags>
  </entry>
  <entry>
    <title>如何將檔案轉成base64編碼</title>
    <url>/2019/12/09/JsFileToBase64/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>首先在HTML建立一個File Upload與一個顯示結果的div</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>接下來為File Upload綁定事件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//建立FileReader去讀取File Upload的內容</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">let</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line"></span><br><span class="line">       <span class="comment">//設定初始化事件</span></span><br><span class="line"></span><br><span class="line">       reader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">let</span> arrayBuffer = <span class="variable language_">this</span>.<span class="property">result</span>;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">let</span> base64 = <span class="title function_">btoa</span>(</span><br><span class="line">               <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(arrayBuffer)</span><br><span class="line">                   .<span class="title function_">reduce</span>(<span class="function">(<span class="params">data, byte</span>) =&gt;</span> data + <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(byte), <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">           );</span><br><span class="line">       </span><br><span class="line">         <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#result&#x27;</span>).<span class="property">innerHTML</span> = arrayBuffer + <span class="string">&#x27;  &#x27;</span> + arrayBuffer.<span class="property">byteLength</span>;    </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//開始讀取</span></span><br><span class="line"></span><br><span class="line">      reader.<span class="title function_">readAsArrayBuffer</span>(<span class="variable language_">this</span>.<span class="property">files</span>[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">   &#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa">MDN btoa</a></p>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>base64</tag>
      </tags>
  </entry>
  <entry>
    <title>如何判斷function是否存在</title>
    <url>/2019/12/28/JsFunction/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>建立一個名稱為TEST的function</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">TEST</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;call function TEST&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>判斷function是否存在方法，並執行</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> funcName = <span class="string">&#x27;TEST&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> (<span class="variable language_">window</span>[<span class="title class_">FuncName</span>]) == <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//執行方法</span></span><br><span class="line">        <span class="variable language_">window</span>[<span class="title class_">FuncName</span>]();</span><br><span class="line">    </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;此方法不存在&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof">MDN typeof</a></p>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
  </entry>
  <entry>
    <title>如何在iframe讀取或寫入字串</title>
    <url>/2019/12/28/JsIframe/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>首先在HTML建立一個iframe</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>用Javascript搜尋iframe的DOM物件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> iframe = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;test&#x27;</span>).<span class="property">contentDocument</span>;</span><br></pre></td></tr></table></figure>

<p>字串寫入iframe</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">iframe.<span class="title function_">open</span>();</span><br><span class="line"></span><br><span class="line">iframe.<span class="title function_">write</span>(<span class="string">&#x27;&lt;a&gt;test&lt;/a&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">iframe.<span class="title function_">close</span>();</span><br></pre></td></tr></table></figure>

<p>取得iframe字串</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">iframe.<span class="property">body</span>.<span class="property">innerText</span></span><br></pre></td></tr></table></figure>

<p>URL.createObjectURL寫入iframe</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> blobx = <span class="keyword">new</span> <span class="title class_">Blob</span>(</span><br><span class="line">    [<span class="string">&#x27;&lt;base href=&quot;[URL輸入]&quot;&gt;&#x27;</span> + data],</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;text/html&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> urlObject = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blobx)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;test&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, urlObject)</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/write">MDN Document write</a></p>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
  </entry>
  <entry>
    <title>如何迭代JS物件</title>
    <url>/2020/03/27/JsIteratorObject/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>使用for…in語法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (變數 <span class="keyword">in</span> 物件) &#123;...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>下方為Sample Code</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> model = &#123;</span><br><span class="line">    <span class="attr">item</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> filed <span class="keyword">in</span> model) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(model[filed]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用Object.keys()</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(物件);</span><br></pre></td></tr></table></figure>

<p>下方為Sample Code</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> model = &#123;</span><br><span class="line">    <span class="attr">item</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(model);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> length = keys.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= length; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> key =  keys[i];</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(model[key]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Object.keys與for…in不同之處</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for-in 迴圈還會迭代出物件自其原型鏈所繼承來的可列舉屬性</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys">MDN Object keys</a></p>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
  </entry>
  <entry>
    <title>如何將圖片壓縮並下載檔案</title>
    <url>/2019/12/25/JsPictureCompress/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>首先在HTML建立一個File Upload與一個canvas</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>  <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> <span class="attr">height</span>=<span class="string">&quot;600&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>接下來為File Upload綁定事件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//取得第一個檔案</span></span><br><span class="line">    <span class="keyword">const</span> file= <span class="variable language_">this</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//取得canvas</span></span><br><span class="line">    <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;canvas&#x27;</span>);   </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//宣告Image物件</span></span><br><span class="line">    <span class="keyword">let</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">//建立Image載入事件</span></span><br><span class="line">    img.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//在canvas載入圖片 </span></span><br><span class="line">        canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>).<span class="title function_">drawImage</span>(img,<span class="number">0</span>,<span class="number">0</span>,<span class="number">800</span>,<span class="number">600</span>); </span><br><span class="line"></span><br><span class="line">        <span class="comment">//回收圖片物件</span></span><br><span class="line">        <span class="variable constant_">URL</span>.<span class="title function_">revokeObjectURL</span>(img.<span class="property">src</span>);   </span><br><span class="line">        </span><br><span class="line">        <span class="comment">//把canvas圖片轉成Blob格式</span></span><br><span class="line">        canvas.<span class="title function_">toBlob</span>(<span class="function">(<span class="params">blob</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//宣告FileReader物件</span></span><br><span class="line">            <span class="keyword">var</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//建立FileReader載入完成事件</span></span><br><span class="line">            reader.<span class="property">onloadend</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(reader.<span class="property">result</span>.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//讀取Blob格式物件</span></span><br><span class="line">            reader.<span class="title function_">readAsDataURL</span>(blob);</span><br><span class="line">        &#125;, <span class="string">&quot;image/jpeg&quot;</span>, <span class="number">0.8</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//圖片物件載入檔案</span></span><br><span class="line">    img.<span class="property">src</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(file);</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API">MDN Canvas_API</a></p>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
  </entry>
  <entry>
    <title>如何使用Regex群組</title>
    <url>/2022/05/22/JsRegexGroup/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>建立一個名稱為TEST的function</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 建立規則</span></span><br><span class="line"><span class="keyword">var</span> myRegexp = <span class="regexp">/(?&lt;群組名稱&gt;.*)Test/g</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 執行規則</span></span><br><span class="line"><span class="keyword">var</span> match =  myRegexp.<span class="title function_">exec</span>(<span class="string">&#x27;123Test&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取得執行結果 output: 123</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(match.<span class="property">groups</span>.群組名稱);</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges">MDN</a></p>
]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Regex</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux IBM i Access Odbc手動安裝</title>
    <url>/2021/10/05/LinuxIbmIAccessOdbc/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="Odbc元件配置"><a href="#Odbc元件配置" class="headerlink" title="Odbc元件配置"></a>Odbc元件配置</h2><p>安裝Linux Odbc元件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install unixodbc</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="Odbc-Driver-安裝"><a href="#Odbc-Driver-安裝" class="headerlink" title="Odbc Driver 安裝"></a>Odbc Driver 安裝</h2><p>登入<a href="https://www.ibm.com/support/pages/ibm-i-access-client-solutions">IBM網頁</a>下載Linux Odbc Driver並安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i ibm-iaccess-1.1.0.15-1.0.amd64.deb</span><br></pre></td></tr></table></figure>
<p>查看Linux Odbc Drivers設定檔位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">odbcinst -j</span><br></pre></td></tr></table></figure>
<p>查看設定檔是否出現IBM i Access ODBC Driver的設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/odbcinst.ini</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>IBM i Access</tag>
        <tag>ODBC</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Mssql ODBC手動安裝</title>
    <url>/2021/10/05/LinuxMssqlOdbc/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="Linux-Odbc-元件配置"><a href="#Linux-Odbc-元件配置" class="headerlink" title="Linux Odbc 元件配置"></a>Linux Odbc 元件配置</h2><p>安裝Linux Odbc元件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install unixodbc</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="Odbc-Driver-安裝"><a href="#Odbc-Driver-安裝" class="headerlink" title="Odbc Driver 安裝"></a>Odbc Driver 安裝</h2><p>登入<a href="https://docs.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-ver15">Microsoft網頁</a>下載Odbc Driver並安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i msodbcsql17_17.8.1.1-1_amd64.deb</span><br></pre></td></tr></table></figure>
<p>查看Linux Odbc Drivers設定檔位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">odbcinst -j</span><br></pre></td></tr></table></figure>
<p>查看設定檔是否出現ODBC Driver 17 for SQL Server的設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/odbcinst.ini</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>ODBC</tag>
        <tag>Mssql</tag>
      </tags>
  </entry>
  <entry>
    <title>使用AddInMemoryCollection設定Configuration</title>
    <url>/2023/01/21/NetAddInMemoryCollection/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="appsettings-json設定如下"><a href="#appsettings-json設定如下" class="headerlink" title="appsettings.json設定如下"></a>appsettings.json設定如下</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft.AspNetCore&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="轉換為Dictionary-lt-string-string-gt"><a href="#轉換為Dictionary-lt-string-string-gt" class="headerlink" title="轉換為Dictionary&lt;string, string&gt;"></a>轉換為Dictionary&lt;string, string&gt;</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; inMemorySettings = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; &#123;</span><br><span class="line">    &#123;<span class="string">&quot;Logging:LogLevel:Default&quot;</span>,  <span class="string">&quot;Information&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;Logging:LogLevel:Microsoft.AspNetCore&quot;</span>,  <span class="string">&quot;Warning&quot;</span>&#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="建立Configuration"><a href="#建立Configuration" class="headerlink" title="建立Configuration"></a>建立Configuration</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">IConfiguration configuration = <span class="keyword">new</span> ConfigurationBuilder()</span><br><span class="line">            .AddInMemoryCollection(inMemorySettings)</span><br><span class="line">            .Build();</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.configuration.memoryconfigurationbuilderextensions.addinmemorycollection?view=dotnet-plat-ext-7.0">MemoryConfigurationBuilderExtensions.AddInMemoryCollection Method</a></p>
]]></content>
      <categories>
        <category>.Net</category>
      </categories>
      <tags>
        <tag>IConfiguration</tag>
      </tags>
  </entry>
  <entry>
    <title>依字元內碼轉換Big5與Unicode</title>
    <url>/2022/05/22/NetBig5AndUnicode/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>Big5依傳入內碼轉成字元</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 建立兩位元陣列</span></span><br><span class="line"><span class="built_in">byte</span>[] codeBytes = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 欲轉換內碼前兩字轉為16進制</span></span><br><span class="line">codeBytes[<span class="number">0</span>] = (<span class="built_in">byte</span>)Convert.ToInt32(<span class="string">&quot;欲轉換內碼&quot;</span>.Substring(<span class="number">0</span>, <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 欲轉換內碼後兩字轉為16進制</span></span><br><span class="line">codeBytes[<span class="number">1</span>] = (<span class="built_in">byte</span>)Convert.ToInt32(<span class="string">&quot;欲轉換內碼&quot;</span>.Substring(<span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 轉成字元</span></span><br><span class="line">Encoding big5 = Encoding.GetEncoding(<span class="number">950</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> result = big5.GetString(bytes);</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>Unicode依傳入內碼轉成字元，與Big5轉換的方法雷同，只需調整內碼放置的順序</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 建立兩位元陣列</span></span><br><span class="line"><span class="built_in">byte</span>[] bytes = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 欲轉換內碼後兩字轉為16進制</span></span><br><span class="line">bytes[<span class="number">0</span>] = Convert.ToByte(text.Substring(<span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 欲轉換內碼前兩字轉為16進制</span></span><br><span class="line">bytes[<span class="number">1</span>] = Convert.ToByte(text.Substring(<span class="number">0</span>, <span class="number">2</span>), <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 轉成字元</span></span><br><span class="line">Encoding unicode= Encoding.Unicode;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> result = unicode.GetString(bytes);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>.Net</category>
      </categories>
      <tags>
        <tag>Font</tag>
        <tag>Big5</tag>
        <tag>Unicode</tag>
      </tags>
  </entry>
  <entry>
    <title>Http的Get方法傳入List參數</title>
    <url>/2023/01/21/NetHttpGetWithList/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="建立類別"><a href="#建立類別" class="headerlink" title="建立類別"></a>建立類別</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span> &#123;</span><br><span class="line">  </span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="建立HttpGet方法"><a href="#建立HttpGet方法" class="headerlink" title="建立HttpGet方法"></a>建立HttpGet方法</h2><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">  [<span class="meta">HttpGet</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">Get</span>(<span class="params">[FromQuery] List&lt;User&gt; user</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> user;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="組合Request的Url"><a href="#組合Request的Url" class="headerlink" title="組合Request的Url"></a>組合Request的Url</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">https://example.com/User?user[0].Name=&#x27;張三&#x27;&amp;user[0].Age=10&amp;user[1].Name=&#x27;李四&#x27;&amp;user[1].Age=20</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://learn.microsoft.com/en-us/dotnet/api/microsoft.extensions.configuration.memoryconfigurationbuilderextensions.addinmemorycollection?view=dotnet-plat-ext-7.0">MemoryConfigurationBuilderExtensions.AddInMemoryCollection Method</a></p>
]]></content>
      <categories>
        <category>.Net</category>
      </categories>
  </entry>
  <entry>
    <title>如何在資料存取層進行單元測試</title>
    <url>/2022/05/01/NetRepositoryUnitTest/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>安裝Nuget的Sqlite套件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Install-Package Microsoft.EntityFrameworkCore.Sqlite</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>建立EntityFramework的DbContext</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestDbContext</span> : <span class="title">DbContext</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DbSet</span>&lt;<span class="title">Table</span>&gt;? Table</span> &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDbContext</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDbContext</span>(<span class="params">DbContextOptions options</span>) : <span class="title">base</span>(<span class="params">options</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnModelCreating</span>(<span class="params">ModelBuilder modelBuilder</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        modelBuilder.Entity&lt;Table&gt;(entity =&gt; &#123;</span><br><span class="line">            entity.HasKey(x =&gt; x.Id);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用Sqlite的In-Memory模式載入DbContext</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">SqliteConnection connection = <span class="keyword">new</span> SqliteConnection(<span class="string">&quot;Data Source=:memory:&quot;</span>);</span><br><span class="line"></span><br><span class="line">connection.Open();</span><br><span class="line"></span><br><span class="line">DbContextOptions options = <span class="keyword">new</span> DbContextOptionsBuilder()</span><br><span class="line">.UseSqlite(connection)</span><br><span class="line">.Options;</span><br></pre></td></tr></table></figure>

<p>然後使用DbContext的設定建立資料庫</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> TestDbContext context = <span class="keyword">new</span> TestDbContext(options);</span><br><span class="line">context.Database.EnsureCreated();</span><br></pre></td></tr></table></figure>

<p>最後可開始使用EntityFramework開始操作資料庫</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> TestDbContext context = <span class="keyword">new</span> TestDbContext(options);</span><br><span class="line">List&lt;Table&gt; table = context.Table.ToList();</span><br></pre></td></tr></table></figure>

<p>如果有使用Sqlite未定義的Database Function, 可在程式中使用CreateFunction定義</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">SqliteConnection connection = <span class="keyword">new</span> SqliteConnection(<span class="string">&quot;Data Source=:memory:&quot;</span>);</span><br><span class="line"></span><br><span class="line">connection.CreateFunction(<span class="string">&quot;current_date&quot;</span>, (x) =&gt; DateTime.Now);</span><br><span class="line"></span><br><span class="line">connection.Open();</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.data.sqlite.sqliteconnection.createfunction?view=msdata-sqlite-6.0.0">Microsoft文件</a></p>
<p><a href="https://csharp.hotexamples.com/examples/-/SQLiteConnection/CreateFunction/php-sqliteconnection-createfunction-method-examples.html">SQLite Examples</a></p>
]]></content>
      <categories>
        <category>.Net</category>
      </categories>
      <tags>
        <tag>UnitTest</tag>
        <tag>SQLite</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在商業邏輯層進行單元測試</title>
    <url>/2022/05/01/NetServiceUnitTest/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><p>安裝Nuget的Moq套件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Install-Package Moq</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>建立Repository的模擬物件</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Mock&lt;Repository&gt; mockRepository = <span class="keyword">new</span> Mock&lt;Repository&gt;();</span><br><span class="line"></span><br><span class="line">mockRepository</span><br><span class="line">.Setup(x=&gt; x.GetData(It.IsAny&lt;<span class="built_in">string</span>&gt;()))</span><br><span class="line">.Returns(<span class="keyword">new</span> Table &#123;</span><br><span class="line">    Id = <span class="number">1</span>,</span><br><span class="line">    Name = <span class="string">&quot;張三&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>把Repository的模擬物件注入Service</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Service service = <span class="keyword">new</span> Service(mockRepository.Object);</span><br></pre></td></tr></table></figure>

<p>使用Service</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Table result = service.RunLogic();</span><br><span class="line"></span><br><span class="line">Assert.That(result.Name, Is.EqualTo(<span class="string">&quot;張三&quot;</span>));</span><br></pre></td></tr></table></figure>

<p>依傳入參數做回傳</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">mockRepository</span><br><span class="line">.Setup(x=&gt; x.GetData(<span class="string">&quot;張三&quot;</span>))</span><br><span class="line">.Returns(<span class="keyword">new</span> Table &#123;</span><br><span class="line">    Id = <span class="number">1</span>,</span><br><span class="line">    Name = <span class="string">&quot;張三&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">mockRepository</span><br><span class="line">.Setup(x=&gt; x.GetData(<span class="string">&quot;李四&quot;</span>))</span><br><span class="line">.Returns(<span class="keyword">new</span> Table &#123;</span><br><span class="line">    Id = <span class="number">2</span>,</span><br><span class="line">    Name = <span class="string">&quot;李四&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>模擬呼叫方法多次依序回傳不同內容，可用SetupSequence做設定</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">mockRepository</span><br><span class="line">.SetupSequence(x=&gt; x.GetData(It.IsAny&lt;<span class="built_in">string</span>&gt;()))</span><br><span class="line">.Returns(<span class="keyword">new</span> Table &#123;</span><br><span class="line">    Id = <span class="number">1</span>,</span><br><span class="line">    Name = <span class="string">&quot;張三&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">.Returns(<span class="keyword">new</span> Table &#123;</span><br><span class="line">    Id = <span class="number">2</span>,</span><br><span class="line">    Name = <span class="string">&quot;李四&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://github.com/Moq/moq4/wiki/Quickstart#customizing-mock-behavior">Moq文件</a></p>
]]></content>
      <categories>
        <category>.Net</category>
      </categories>
      <tags>
        <tag>UnitTest</tag>
        <tag>Moq</tag>
      </tags>
  </entry>
  <entry>
    <title>安裝Whistle</title>
    <url>/2023/01/20/WhistleProxyInstall/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="使用Node安裝Whistle"><a href="#使用Node安裝Whistle" class="headerlink" title="使用Node安裝Whistle"></a>使用Node安裝Whistle</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -g whistle</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<h2 id="啟動Whistle"><a href="#啟動Whistle" class="headerlink" title="啟動Whistle"></a>啟動Whistle</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">w2 start</span><br></pre></td></tr></table></figure>

<h2 id="查看Whistle狀態"><a href="#查看Whistle狀態" class="headerlink" title="查看Whistle狀態"></a>查看Whistle狀態</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">w2 status</span><br></pre></td></tr></table></figure>

<h2 id="停止Whistle"><a href="#停止Whistle" class="headerlink" title="停止Whistle"></a>停止Whistle</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">w2 stop</span><br></pre></td></tr></table></figure>

<h2 id="設定Whistle為Proxy的Server"><a href="#設定Whistle為Proxy的Server" class="headerlink" title="設定Whistle為Proxy的Server"></a>設定Whistle為Proxy的Server</h2><p><img src="/Win10ProxySetting.png" alt="Win10ProxySetting"></p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.npmjs.com/package/whistle">whistle npm</a></p>
]]></content>
      <categories>
        <category>Whistle</category>
      </categories>
  </entry>
  <entry>
    <title>Whistle代理規則使用</title>
    <url>/2023/01/20/WhistleProxyRule/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="Dns代理設定"><a href="#Dns代理設定" class="headerlink" title="Dns代理設定"></a>Dns代理設定</h2><ul>
<li>在Rules頁籤加入以下設定，設定Domain對應Ip位置  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">example.<span class="attribute">com</span> <span class="number">192.168.0.1</span></span><br></pre></td></tr></table></figure></li>
</ul>
<span id="more"></span>
<h2 id="Http的StatusCode代理設定"><a href="#Http的StatusCode代理設定" class="headerlink" title="Http的StatusCode代理設定"></a>Http的StatusCode代理設定</h2><ul>
<li>在Rules頁籤加入以下設定，設定狀態碼  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">^https://example.com/User/<span class="attribute">Get</span> statusCode://200</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Http的Headers代理設定"><a href="#Http的Headers代理設定" class="headerlink" title="Http的Headers代理設定"></a>Http的Headers代理設定</h2><ul>
<li><p>在Values頁籤加入以下設定，命名為corsheaders</p>
  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line">Content-Type: application/json; charset=utf8</span><br></pre></td></tr></table></figure>
</li>
<li><p>在Rules頁籤加入以下設定，設定Headers</p>
  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">^https://example.com/User/<span class="attribute">Get</span> resHeaders://&#123;corsheaders&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Http的Body代理設定"><a href="#Http的Body代理設定" class="headerlink" title="Http的Body代理設定"></a>Http的Body代理設定</h2><ul>
<li><p>在Values頁籤加入以下設定，命名為User.json</p>
  <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;張三&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Age&quot;</span><span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在Rules頁籤加入以下設定，設定Headers</p>
  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">^https://example.com/User/<span class="attribute">Get</span> resBody://&#123;User.json&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="網頁嵌入Js檔案代理設定"><a href="#網頁嵌入Js檔案代理設定" class="headerlink" title="網頁嵌入Js檔案代理設定"></a>網頁嵌入Js檔案代理設定</h2><ul>
<li><p>在Values頁籤加入以下設定，命名為test.js</p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;test&#x27;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>在Rules頁籤加入以下設定，設定Js檔案</p>
  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">^https://example.com/index.<span class="attribute">html</span> jsAppend://&#123;test.js&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Socks代理設定"><a href="#Socks代理設定" class="headerlink" title="Socks代理設定"></a>Socks代理設定</h2><ul>
<li>在Rules頁籤加入以下設定，設定Domain對應Ip位置  <figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line">example.<span class="attribute">com</span> socks://127.0.0.1:8080</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://wproxy.org/whistle/">whistle</a></p>
]]></content>
      <categories>
        <category>Whistle</category>
      </categories>
  </entry>
  <entry>
    <title>Win10家用版安裝Docker</title>
    <url>/2023/05/05/Win10HomeDocker/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="使用Scoop安裝Docker"><a href="#使用Scoop安裝Docker" class="headerlink" title="使用Scoop安裝Docker"></a>使用Scoop安裝Docker</h2><p>執行下方命令安裝，請注意下方Docker只支援Ｗindows的Image</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scoop install docker</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>複製Docker資料至磁碟機D，節省磁碟機C的空間</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Copy-Item</span> <span class="string">&#x27;C:\ProgramData\docker&#x27;</span> <span class="literal">-Destination</span> <span class="string">&#x27;d:\\docker&#x27;</span></span><br></pre></td></tr></table></figure>

<p>建立C:\ProgramData\docker\config\daemon.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hosts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;tcp://0.0.0.0:&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data-root&quot;</span><span class="punctuation">:</span> <span class="string">&quot;d:\\docker&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dns&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;8.8.8.8&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="安裝Hyper-V功能"><a href="#安裝Hyper-V功能" class="headerlink" title="安裝Hyper-V功能"></a>安裝Hyper-V功能</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 將批處理檔案所在的目錄設定為工作目錄</span></span><br><span class="line"><span class="built_in">pushd</span> <span class="string">&quot;%~dp0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尋找符合檔案名的所有檔案名，匯出文字檔</span></span><br><span class="line"><span class="built_in">dir</span> /b %SystemRoot%\servicing\Packages\*Hyper<span class="literal">-V</span>*.mum &gt;hyper<span class="literal">-v</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入套件</span></span><br><span class="line"><span class="keyword">for</span> /f %%i <span class="keyword">in</span> (<span class="string">&#x27;findstr /i . hyper-v.txt 2^&gt;nul&#x27;</span>) <span class="keyword">do</span> dism /online /norestart /<span class="built_in">add-package</span>:<span class="string">&quot;%SystemRoot%\servicing\Packages\%%i&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除文字檔</span></span><br><span class="line"><span class="built_in">del</span> hyper<span class="literal">-v</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝容器套件</span></span><br><span class="line">Dism /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Hyper-V-All</span> /LimitAccess /ALL</span><br></pre></td></tr></table></figure>

<h2 id="安裝容器功能"><a href="#安裝容器功能" class="headerlink" title="安裝容器功能"></a>安裝容器功能</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 將批處理檔案所在的目錄設定為工作目錄</span></span><br><span class="line"><span class="built_in">pushd</span> <span class="string">&quot;%~dp0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尋找符合檔案名的所有檔案名，匯出文字檔</span></span><br><span class="line"><span class="built_in">dir</span> /b %SystemRoot%\servicing\Packages\*container*.mum &gt;container.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入套件</span></span><br><span class="line"><span class="keyword">for</span> /f %%i <span class="keyword">in</span> (<span class="string">&#x27;findstr /i . container.txt 2^&gt;nul&#x27;</span>) <span class="keyword">do</span> dism /online /norestart /<span class="built_in">add-package</span>:<span class="string">&quot;%SystemRoot%\servicing\Packages\%%i&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除文字檔</span></span><br><span class="line"><span class="built_in">del</span> container.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝容器套件</span></span><br><span class="line">Dism /online /<span class="built_in">enable-feature</span> /featurename:containers /LimitAccess /ALL</span><br></pre></td></tr></table></figure>
<h2 id="執行Docker"><a href="#執行Docker" class="headerlink" title="執行Docker"></a>執行Docker</h2><p>執行下方命令註冊Ｗindows服務</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">dockerd <span class="literal">--register-service</span> ; <span class="built_in">Start-Service</span> docker ; <span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://scoop.sh/#/apps?q=docker&s=0&d=1&o=true">Scoop Docker</a></p>
<p><a href="https://learn.microsoft.com/zh-tw/virtualization/windowscontainers/manage-containers/container-base-images">Windows Base Image</a></p>
]]></content>
      <categories>
        <category>Wsl2</category>
      </categories>
      <tags>
        <tag>Wsl2</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL2移動至其它硬碟</title>
    <url>/2023/05/05/Wsl2Disk/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="列出已安裝的Linux發行版"><a href="#列出已安裝的Linux發行版" class="headerlink" title="列出已安裝的Linux發行版"></a>列出已安裝的Linux發行版</h2><p>執行下方命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">-l</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="遷移至磁碟機D"><a href="#遷移至磁碟機D" class="headerlink" title="遷移至磁碟機D"></a>遷移至磁碟機D</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 導出已安裝的Linux發行版壓縮檔</span></span><br><span class="line">wsl <span class="literal">--export</span> <span class="string">&quot;Ubuntu-22.04&quot;</span> d:\ubuntu.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除WSL</span></span><br><span class="line">wsl <span class="literal">--unregister</span> <span class="string">&quot;Ubuntu-22.04&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立解壓縮的目錄</span></span><br><span class="line">mkdir d:\Ubuntu</span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux發行版壓縮檔解壓縮至新目錄後加入WSL</span></span><br><span class="line">wsl <span class="literal">--import</span> <span class="string">&quot;Ubuntu-22.04&quot;</span> d:\ubuntu d:\ubuntu.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刪除Linux發行版壓縮檔</span></span><br><span class="line"><span class="built_in">del</span> d:\ubuntu.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 因重新建立WSL會以root為預設帳戶，需重新設定預設帳戶</span></span><br><span class="line">ubuntu2204.exe config <span class="literal">--default-user</span> ubuntu</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://learn.microsoft.com/zh-tw/windows/wsl/use-custom-distro">匯入任何要與 WSL 搭配使用的 Linux 發行版本</a></p>
]]></content>
      <categories>
        <category>Wsl2</category>
      </categories>
      <tags>
        <tag>Wsl2</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL2開放Docker外部連線</title>
    <url>/2023/04/29/Wsl2Docker/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="開放Docker外部連線"><a href="#開放Docker外部連線" class="headerlink" title="開放Docker外部連線"></a>開放Docker外部連線</h2><p>建立&#x2F;etc&#x2F;docker&#x2F;daemon.json</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>

<p>加入以下設定</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hosts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;tcp://0.0.0.0:&quot;</span> <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="確認docker連線-2375是否存在"><a href="#確認docker連線-2375是否存在" class="headerlink" title="確認docker連線*:2375是否存在"></a>確認docker連線*:2375是否存在</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ss -peanut</span><br></pre></td></tr></table></figure>

<h2 id="Chocolatey安裝Docker-CLI"><a href="#Chocolatey安裝Docker-CLI" class="headerlink" title="Chocolatey安裝Docker CLI"></a>Chocolatey安裝Docker CLI</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">choco install docker<span class="literal">-cli</span></span><br></pre></td></tr></table></figure>

<h2 id="主機連線設定有兩種方式"><a href="#主機連線設定有兩種方式" class="headerlink" title="主機連線設定有兩種方式"></a>主機連線設定有兩種方式</h2><ol>
<li><p>設定環境變數DOCKER_HOST</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;DOCKER_HOST&#x27;</span>, <span class="string">&quot;tcp://<span class="variable">$</span>(<span class="variable">$wslip</span>):2375&quot;</span>, <span class="string">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>設定docker context</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得WSL的IP位置</span></span><br><span class="line"><span class="variable">$wslip</span> = wsl <span class="literal">--</span> ip <span class="literal">-o</span> <span class="literal">-4</span> <span class="literal">-json</span> addr list eth0 | <span class="built_in">ConvertFrom-Json</span> | %&#123; <span class="variable">$_</span>.addr_info.local &#125; ` | ?&#123; <span class="variable">$_</span> &#125;</span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;Setting Docker context &#x27;wsl&#x27; to host=tcp://<span class="variable">$</span>(<span class="variable">$wslip</span>):2375&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立context</span></span><br><span class="line">docker context create wsl <span class="literal">--docker</span> <span class="string">&quot;host=tcp://<span class="variable">$</span>(<span class="variable">$wslip</span>):2375&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新context</span></span><br><span class="line">docker context update wsl <span class="literal">--docker</span> <span class="string">&quot;host=tcp://<span class="variable">$</span>(<span class="variable">$wslip</span>):2375&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用context</span></span><br><span class="line">docker context use wsl</span><br><span class="line">docker <span class="literal">--context</span> wsl <span class="built_in">ps</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 顯示目前設定的context</span></span><br><span class="line">docker context <span class="built_in">ls</span> <span class="literal">--format</span>=<span class="string">&quot;&#123;&#123;json .&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Powershell取得WSL的IP位置"><a href="#Powershell取得WSL的IP位置" class="headerlink" title="Powershell取得WSL的IP位置"></a>Powershell取得WSL的IP位置</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--</span> ip <span class="literal">-o</span> <span class="literal">-4</span> <span class="literal">-json</span> addr list eth0 `</span><br><span class="line">| <span class="built_in">ConvertFrom-Json</span> `</span><br><span class="line">| %&#123; <span class="variable">$_</span>.addr_info.local &#125; `</span><br><span class="line">| ?&#123; <span class="variable">$_</span> &#125;</span><br></pre></td></tr></table></figure>

<h2 id="測試Docker命令"><a href="#測試Docker命令" class="headerlink" title="測試Docker命令"></a>測試Docker命令</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">docker <span class="literal">-H</span> [<span class="type">YOUR_WSL_IP</span>] <span class="built_in">ps</span></span><br></pre></td></tr></table></figure>

<!-- sudo dockerd& -->
<!-- docker run --rm hello-world -->

<h2 id="登入wsl自動啟動Docker"><a href="#登入wsl自動啟動Docker" class="headerlink" title="登入wsl自動啟動Docker"></a>登入wsl自動啟動Docker</h2><p>修改&#x2F;etc&#x2F;profile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/profile</span><br></pre></td></tr></table></figure>

<p>加入以下設定</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export DOCKER_HOST=&quot;tcp://127.0.0.1:2375&quot;</span><br><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure>

<h2 id="無密碼sudo授權-不建議用在生產環境"><a href="#無密碼sudo授權-不建議用在生產環境" class="headerlink" title="無密碼sudo授權(不建議用在生產環境)"></a>無密碼sudo授權(不建議用在生產環境)</h2><p>修改&#x2F;etc&#x2F;sudoers</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>加入以下設定</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%ubuntu ALL=(ALL:ALL) NOPASSWD:ALL</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://community.chocolatey.org/packages/docker-cli">Daemon CLI (dockerd)</a></p>
<p><a href="https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file">Chocolatey Docker CLI</a></p>
]]></content>
      <categories>
        <category>Wsl2</category>
      </categories>
      <tags>
        <tag>Wsl2</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL2設定固定IP</title>
    <url>/2023/04/29/Wsl2Network/</url>
    <content><![CDATA[<h1 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h1><h2 id="設定DNS"><a href="#設定DNS" class="headerlink" title="設定DNS"></a>設定DNS</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 刪除原始的resolv.conf設定</span></span><br><span class="line">sudo <span class="built_in">rm</span> /etc/resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立resolv.conf設定，加入自訂DNS</span></span><br><span class="line">sudo bash -c <span class="string">&#x27;echo &quot;nameserver 192.168.50.1&quot; &gt; /etc/resolv.conf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入Google的DNS加速</span></span><br><span class="line">sudo bash -c <span class="string">&#x27;echo &quot;nameserver 8.8.8.8&quot; &gt;&gt; /etc/resolv.conf&#x27;</span></span><br><span class="line">sudo bash -c <span class="string">&#x27;echo &quot;nameserver 8.8.4.4&quot; &gt;&gt; /etc/resolv.conf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定/etc/wsl.conf</span></span><br><span class="line">sudo bash -c <span class="string">&#x27;echo &quot;[network]&quot; &gt; /etc/wsl.conf&#x27;</span></span><br><span class="line">sudo bash -c <span class="string">&#x27;echo &quot;generateResolvConf = false&quot; &gt;&gt; /etc/wsl.conf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 鎖定resolv.conf設定</span></span><br><span class="line">sudo chattr +i /etc/resolv.conf</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="Powershell設定Ububtu網卡"><a href="#Powershell設定Ububtu網卡" class="headerlink" title="Powershell設定Ububtu網卡"></a>Powershell設定Ububtu網卡</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 搜尋eth0網卡IP設定</span></span><br><span class="line"><span class="variable">$ipAddr</span> = wsl <span class="literal">-u</span> root /bin/bash <span class="literal">-c</span> <span class="string">&quot;ip addr show eth0 | grep &#x27;inet\b&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ipAddr</span> = <span class="variable">$ipAddr</span>.Trim().Split(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 確認是否為自訂的網卡設定</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$ipAddr</span>.Contains(<span class="string">&quot;192.168.50.2&quot;</span>))&#123;</span><br><span class="line">  <span class="comment"># 移除Ububtu網卡設定</span></span><br><span class="line">  wsl <span class="literal">-u</span> root /bin/bash <span class="literal">-c</span> <span class="string">&quot;ip addr del <span class="variable">$ipAddr</span> dev eth0&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 加入自訂的網卡</span></span><br><span class="line">  wsl <span class="literal">-u</span> root /bin/bash <span class="literal">-c</span> <span class="string">&quot;ip addr add 192.168.50.2/24 broadcast 192.168.50.255 dev eth0&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 加入自訂的路由</span></span><br><span class="line">  wsl <span class="literal">-u</span> root /bin/bash <span class="literal">-c</span> <span class="string">&quot;ip route add 0.0.0.0/0 via 192.168.50.1 dev eth0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<!-- sudo ip addr del $(ip addr show eth0 | grep 'inet\b' | awk '{print $2}' | head -n 1) dev eth0 -->
<!-- sudo ip addr add 192.168.50.2/24 broadcast 192.168.50.255 dev eth0 -->
<!-- sudo ip route add 0.0.0.0/0 via 192.168.50.1 dev eth0 -->

<h2 id="Powershell設定vEthernet-WSL"><a href="#Powershell設定vEthernet-WSL" class="headerlink" title="Powershell設定vEthernet (WSL)"></a>Powershell設定vEthernet (WSL)</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 確認是否為自訂的vEthernet (WSL)設定</span></span><br><span class="line"><span class="keyword">if</span>(!(<span class="built_in">Get-NetAdapter</span> <span class="string">&#x27;vEthernet (WSL)&#x27;</span> | <span class="built_in">Get-NetIPAddress</span>).IPAddress.Contains(<span class="string">&#x27;192.168.50.1&#x27;</span>))&#123;</span><br><span class="line">  <span class="comment"># 移除vEthernet (WSL)設定</span></span><br><span class="line">  <span class="built_in">Get-NetAdapter</span> <span class="string">&#x27;vEthernet (WSL)&#x27;</span> | <span class="built_in">Get-NetIPAddress</span> | <span class="built_in">Remove-NetIPAddress</span> <span class="literal">-Confirm</span>:<span class="variable">$False</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 加入自訂的vEthernet (WSL)</span></span><br><span class="line">  <span class="built_in">New-NetIPAddress</span> <span class="literal">-IPAddress</span> <span class="number">192.168</span>.<span class="number">50.1</span> <span class="literal">-PrefixLength</span> <span class="number">24</span> <span class="literal">-InterfaceAlias</span> <span class="string">&#x27;vEthernet (WSL)&#x27;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 移除WSLNat設定</span></span><br><span class="line">  <span class="built_in">Get-NetNat</span> | ? Name <span class="operator">-Eq</span> WSLNat | <span class="built_in">Remove-NetNat</span> <span class="literal">-Confirm</span>:<span class="variable">$False</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 加入自訂的WSLNat</span></span><br><span class="line">  <span class="built_in">New-NetNat</span> <span class="literal">-Name</span> WSLNat <span class="literal">-InternalIPInterfaceAddressPrefix</span> <span class="number">192.168</span>.<span class="number">50.0</span>/<span class="number">24</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://zhuanlan.zhihu.com/p/380779630">知乎-給WSL2設置靜態IP地址</a></p>
]]></content>
      <categories>
        <category>Wsl2</category>
      </categories>
      <tags>
        <tag>Wsl2</tag>
      </tags>
  </entry>
</search>
